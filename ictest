#!/bin/bash

usage_msg="Usage: ictest [generate|run] TESTDIRS"

showhelp() {
cat << EOF
$usage_msg

generate TESTDIRS : generate testcases from zex.txt files for given directories
run TESTDIRS : run generated tests in given directories and report results
EOF

   exit 0
}

usage() {
    echo "$usage_msg" 1>&2
    exit 1
}

warn() {
    echo "WARNING: $1" 1>&2
}

if [ "$#" -le 1 ]; then
    if [ "$1" = "--help" ]; then
        showhelp
    else
        usage
    fi
fi

expandbase()
{
    abspath="$(readlink -f "$1")"
    echo "$(basename "$abspath")"
}

for testdir in "${@:2}"
do
    if [ ! -d "$testdir" ]; then
        echo "Not a directory: '$testdir'" 1>&2
        usage
    fi
done

case $1 in
"generate")
    for testdir in "${@:2}"
    do
        testname="$(expandbase "$testdir")"

        echo "Generating testcase $testname ..."
        (cd "$testdir"; ictest_generate)
    done
    ;;

"run")
    for testdir in "${@:2}"
    do
        testname="$(expandbase "$testdir")"

        printf "\n=== Executing testcase $testname ===\n"
        if [ ! -f "$testdir/testcase.v" ]; then
            warn "No testcase source file found, skipping testcase"
            continue
        fi

        echo "Generating makefile"
        (cd "$testdir"; icncsim makefile 2>&1 > /dev/null | tee /dev/tty | grep -q ERROR)
        if [ $? -eq 0 ]; then
            warn "Makefile generation failed, check logfile"
           continue
        fi

        echo "Running simulation"
        (cd "$testdir"; icncsim runBatch 2>&1 | ictest_parse_ncsim)
    done

    echo ""
    ;;

"stat")
    for testdir in "${@:2}"
    do
        testname="$(expandbase "$testdir")"
        echo "Testcase $testname:"

        printf "zex.txt ....... "
        if [ ! -f "$testdir/zex.txt" ]; then
           printf "\033[0;31mMISSING\033[0m\n"
        else
           printf "\033[0;32mOK\033[0m\n"
        fi

        printf "testcase.v .... "
        if [ ! -f "$testdir/testcase.v" ]; then
           printf "\033[0;31mMISSING\033[0m\n"
        elif [[ ! $(tac "$testdir/testcase.v") =~ ^unit.finish ]]; then
           printf "\033[0;31mINCOMPLETE\033[0m\n"
        else
           ntests_tc=$(grep -Po "// BEGIN TESTCASE #\K\d+" "$testdir/testcase.v" | tail -1)
           printf "\033[0;32mOK\033[0m ($ntests_tc tests)\n"
        fi

        printf "progmem.txt ... "
        if [ ! -f "$testdir/progmem.txt" ]; then
           printf "\033[0;31mMISSING\033[0m\n"
        else
           ntests_pmem=$(grep -Po "// BEGIN TESTCASE #\K\d+" "$testdir/progmem.txt" | tail -1)
           printf "\033[0;32mOK\033[0m ($ntests_pmem tests)\n"
        fi

        printf "datamem.txt ... "
        if [ ! -f "$testdir/datamem.txt" ]; then
           printf "\033[0;31mMISSING\033[0m\n"
        else
           printf "\033[0;32mOK\033[0m\n"
        fi

        if [ ! -z "$ntests_tc" ]; then
            if [ ! -z "$ntests_pmem" ] && [ "$ntests_tc" -ne "$ntests_pmem" ]; then
                printf "==> \033[0;31mTEST NUMBER MISMATCH, NEEDS UPDATE\033[0m\n"
            else
                printf "==> $ntests_tc tests\n"
            fi
        fi
    done
    ;;

*)
    echo "Unknown option '$1'" 1>&2
    usage
    ;;
esac
